#!/bin/bash

VENV_PATH=$1

DEA_ENV_VER=20191127
GAMMA_VER=20191203

# Note: we are locked into DEA env 20191127 due to GAMMA 20191203 being dynamically linked to gdal 2.0 (thus we need a gdal 2.x in our env)
V10_MODULES=/g/data/v10/public/modules
DEA_ENV_PREFIX=$V10_MODULES/dea-env/$DEA_ENV_VER
DEA_ENV_BIN=$DEA_ENV_PREFIX/bin
DEA_ENV_LIB=$DEA_ENV_PREFIX/lib

# Setup GAMMA env vars
export GAMMA_INSTALL_DIR="/g/data/dg9/SOFTWARE/dg9-apps/GAMMA/GAMMA_SOFTWARE-$GAMMA_VER"
export GAMMA_HOME=$GAMMA_INSTALL_DIR
export DIFF_HOME=$GAMMA_INSTALL_DIR/DIFF
export DISP_HOME=$GAMMA_INSTALL_DIR/DISP
export ISP_HOME=$GAMMA_INSTALL_DIR/ISP
export LAT_HOME=$GAMMA_INSTALL_DIR/LAT
export MSP_HOME=$GAMMA_INSTALL_DIR/MSP

# And add GAMMA to PATH env var
GAMMA_PATHS=$(echo $GAMMA_INSTALL_DIR/{DIFF,DISP,ISP,LAT,MSP}/{bin,scripts})
export PATH="$DEA_ENV_BIN:$(echo $GAMMA_PATHS | sed -e 's/ /:/g'):$PATH"

# Make sure GAMMA knows where our GDAL AND FFTW libraries are
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$DEA_ENV_LIB"
#export LD_PRELOAD=$DEA_ENV_LIB/libgdal.so:$DEA_ENV_LIB/libfftw3f.so

export PYTHONPATH="$GAMMA_INSTALL_DIR:$PYTHON_PATH"

GDAL_VERSION=$(gdal-config --version)

if [[ ! -z "$VENV_PATH" && -e "$VENV_PATH/bin/activate" ]]; then
  echo "Activating venv: $VENV_PATH"
  source $VENV_PATH/bin/activate
fi

# Force PROJ lib directory, as the native build has not set it's directory correctly.
export PROJ_LIB=$V10_MODULES/dea-env/DEA_ENV_VER/share/proj/

# Force UTF-8 (somehow venv messes with this)
export LC_ALL=C.UTF-8
export LANG=C.UTF-8

echo "DEA env version: $DEA_ENV_VER"
echo "GAMMA version: $GAMMA_VER"
echo "GDAL version: $GDAL_VERSION"

