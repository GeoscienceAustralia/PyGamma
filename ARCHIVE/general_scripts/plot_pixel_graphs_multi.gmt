#!/bin/bash

dir=`pwd`
cd $dir

ls pixel_point_coords*.txt | sort -n -t _ -k 4 > coords_list
ls pixel_point_values_*.txt | sort -n -t _ -k 5 > values_list
paste coords_list values_list > file_list

if [ -e all_errors_list ]; then
    rm -f all_errors_list
else
    :
fi

# Determine miniumum and maximum LOS cuml values for all pixels (plot with consistent scale)
while read list; do
    values_file=`echo $list | awk '{print $2}'`

#remove any NaN values from list
    sed '/NaN/d' $values_file > temp_values

    awk 'NR > 1 {print $1}' temp_values > p_values
    awk 'NR > 1 {print $2}' temp_values > yr_values
    awk 'NR > 1 {print $3}' temp_values > e_values
    paste yr_values p_values e_values > $values_file"_new"

    paste p_values e_values > temp3
    sort -k1 -n -r temp3 > temp4
    min2=`head -n 1 temp4`
    max2=`tail -1 temp4`
    p3=`echo $min2 | awk '{print $1}'`
    p4=`echo $max2 | awk '{print $1}'`

    e3=`echo $min2 | awk '{print $2}'`
    if (( $(bc <<< "$p3 < 0") == 1 )); then
	val3=$(echo $p3 - $e3 | bc)
    else
	val3=$(echo $p3 + $e3 | bc)    
    fi
    min_p1=`printf '%.*f\n' 0 $val3`
    echo $min_p1 >> all_errors_list

    e4=`echo $max2 | awk '{print $2}'`
    if (( $(bc <<< "$p4 < 0") == 1 )); then
	val4=$(echo $p4 - $e4 | bc)
    else
	val4=$(echo $p4 + $e4 | bc)    
    fi
    max_p1=`printf '%.*f\n' 0 $val4`
    echo $max_p1 >> all_errors_list
done < file_list

sort -k1 -n -r all_errors_list > temp5
min=`head -n 1 temp5`
max=`tail -1 temp5`

if (( $(bc <<< "$min < 0") == 1 )); then
    min_p=$(echo $min - 2 | bc)
else
    min_p=$(echo $min + 2 | bc)    
fi

if (( $(bc <<< "$max < 0") == 1 )); then
    max_p=$(echo $max - 2 | bc)
else
    max_p=$(echo $max + 2 | bc)    
fi


#flip x min and max if negative
if [ $min_p -le 0 -a  $max_p -le 0 ]; then
    min_p1=$max_p
    max_p1=$min_p
elif [ $min_p -gt 0 -a  $max_p -le 0 ]; then
    min_p1=$max_p
    max_p1=$min_p
elif [ $min_p -gt 0 -a  $max_p -gt 0 ]; then
    echo $min_p > temp6
    echo $max_p >> temp6
    sort -k1 -n temp6 > temp7
    min=`head -n 1 temp7`
    max=`tail -1 temp7`
    min_p1=$min
    max_p1=$max
else
    :
fi


## Create plots
range=-R0/5/$min_p1/$max_p1
tif_width=7.31c
tif_height=6.77c
dpi=300
proj=-JX8/7
gmtset PROJ_LENGTH_UNIT c
gmtset MAP_TICK_LENGTH_PRIMARY 4p/2p
gmtset FONT_ANNOT_PRIMARY 10p
gmtset FONT_LABEL 12p 
gmtset MAP_LABEL_OFFSET 0.3c
gmtset FONT_TITLE 14p
gmtset MAP_TITLE_OFFSET 0.4c

while read list;  do
    values_file=`echo $list | awk '{print $2}'`
    pix_name=`echo $values_file | cut -f 1 -d '.'`
    num=`echo $pix_name | cut -f 4 -d '_'`
    box=$(echo $num \* 2 | bc)
    pix_box=$(echo $box + 1 | bc)
    num_pix=$(echo $pix_box \* $pix_box | bc)
    title="Pixel "$num" ("$pix_box" x "$pix_box" box, "$num_pix")" 
    psfile=pixel_point_graph_$num.ps

# Plot error bars
    psxy $values_file"_new" $proj $range -Ey5p/0.55p,108/166/205 -Sc0.01 -Gblack -K -P -V > $psfile

# Plot line between points
    psxy $values_file"_new" $proj $range -W0.5p,108/166/205 -K -O -P -V >> $psfile

# Plot pixel points
    psxy $values_file"_new" $proj $range -Sc0.15 -W0.4p,108/166/205 -G108/166/205 -Ba1f0.5:"Time (yrs)":/a5f1:"LOS cuml displ (mm)":/WSne -K -O -P -V >> $psfile

# Plot basemap and header
    psbasemap $proj $range -B:."$title":wsen -O -P -V >> $psfile

# Export to .tif
    ps2raster $psfile -A+s$tif_width/$tif_height -E$dpi -Tt -V

# Clean up files
    rm -f all_errors_list file_list coords_list all_values temp* *.ps p_values yr_values e_values values_list

done < file_list


# script end 
####################
